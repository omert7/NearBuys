services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - nearbuys-network

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: nearbuys
      POSTGRES_PASSWORD: nearbuys
      POSTGRES_DB: nearbuys
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nearbuys"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - nearbuys-network

  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    ports:
      - "5000:5000"
    environment:
      - PORT=5000
      - DEBUG=true
      - JWT_SECRET_KEY=your-super-secret-key-replace-in-production
      - RATE_LIMIT=100
      - RATE_WINDOW=60
      - LOG_LEVEL=INFO
    depends_on:
      - user-service
      - product-service
      - seller-service
    networks:
      - nearbuys-network

  message-processor:
    build:
      context: .
      dockerfile: message-processor/Dockerfile
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - DATABASE_URL=postgresql://nearbuys:nearbuys@postgres:5432/nearbuys
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - nearbuys-network

  user-service:
    build:
      context: .
      dockerfile: user-service/Dockerfile
    ports:
      - "5003:5003"
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - DATABASE_URL=postgresql://nearbuys:nearbuys@postgres:5432/nearbuys
      - JWT_SECRET_KEY=your-super-secret-key-replace-in-production
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - nearbuys-network

  product-service:
    build:
      context: .
      dockerfile: product-service/Dockerfile
    ports:
      - "5004:5004"
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - DATABASE_URL=postgresql://nearbuys:nearbuys@postgres:5432/nearbuys
      - JWT_SECRET_KEY=your-super-secret-key-replace-in-production
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - nearbuys-network

  seller-service:
    build:
      context: .
      dockerfile: seller-service/Dockerfile
    ports:
      - "5005:5005"
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - DATABASE_URL=postgresql://nearbuys:nearbuys@postgres:5432/nearbuys
      - JWT_SECRET_KEY=your-super-secret-key-replace-in-production
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - nearbuys-network

networks:
  nearbuys-network:
    driver: bridge

volumes:
  postgres_data: 