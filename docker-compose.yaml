services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - nearbuys-network

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: nearbuys
      POSTGRES_PASSWORD: nearbuys
      POSTGRES_DB: nearbuys
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nearbuys"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - nearbuys-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - nearbuys-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - nearbuys-network
    depends_on:
      - prometheus
    restart: unless-stopped

  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    ports:
      - "5000:5000"
    environment:
      - PORT=5000
      - DEBUG=true
      - JWT_SECRET_KEY=your-super-secret-key-replace-in-production
      - RATE_LIMIT=100
      - RATE_WINDOW=60
      - LOG_LEVEL=INFO
      - METRICS_PORT=8000
    depends_on:
      - user-service
      - product-service
      - seller-service
    networks:
      - nearbuys-network

  message-processor:
    build:
      context: .
      dockerfile: message-processor/Dockerfile
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - DATABASE_URL=postgresql://nearbuys:nearbuys@postgres:5432/nearbuys
      - METRICS_PORT=8004
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    ports:
      - "8004:8004"
    networks:
      - nearbuys-network

  user-service:
    build:
      context: .
      dockerfile: user-service/Dockerfile
    ports:
      - "5003:5003"
      - "8001:8001"
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - DATABASE_URL=postgresql://nearbuys:nearbuys@postgres:5432/nearbuys
      - JWT_SECRET_KEY=your-super-secret-key-replace-in-production
      - METRICS_PORT=8001
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - nearbuys-network

  product-service:
    build:
      context: .
      dockerfile: product-service/Dockerfile
    ports:
      - "5004:5004"
      - "8002:8002"
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - DATABASE_URL=postgresql://nearbuys:nearbuys@postgres:5432/nearbuys
      - JWT_SECRET_KEY=your-super-secret-key-replace-in-production
      - METRICS_PORT=8002
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - nearbuys-network

  seller-service:
    build:
      context: .
      dockerfile: seller-service/Dockerfile
    ports:
      - "5005:5005"
      - "8003:8003"
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - DATABASE_URL=postgresql://nearbuys:nearbuys@postgres:5432/nearbuys
      - JWT_SECRET_KEY=your-super-secret-key-replace-in-production
      - METRICS_PORT=8003
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - nearbuys-network

networks:
  nearbuys-network:
    driver: bridge

volumes:
  postgres_data:
  prometheus_data:
  grafana_data: 